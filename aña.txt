/*fun countName(name: String): Int{
    var count =0
    for(currentName in nombres){
        if(name in currentName){
            count++
        }
    }
}

var x =20
while (x > 0){
    println(x)
    x--
}
do{
    //codigo a ejecutar
} while (condición)
*/
//Estructuras de datos

fun main(){
    val numeros = listOf("one", "two", "three", "four", "five", "six")
println(numeros)

println("Numero de elementos: ${numeros.size}")
println("Segundo elemento: ${numeros.get(1)}")
println("Cuarto elemento: ${numeros[3]}")
println("Ultimo elemento: ${numeros.get(numeros.size - 1)}")
println("Index del elemento \"four\":${numeros.indexOf("four")}")


val list = mutableListOf(1, 2, 3 ,4)
list.add(5)
list.removeAt(1)
list[0] = 0

println(list)

val numSet: Set<Int> = setOf(0,1,2,3,4,5)
val reverseNumSet: Set<Int> = setOf(5,4,3,2,1,0)

var names: Set<String> = mutableSetOf("Nombre 1", "Nombre 2")

val namesToAges: Map<String, Int> = mapOf("user_one" to 20, "user_two" to 23) //mutableMapOf()
for ((key, vaalue) in namesToAges) {
    println("$key tiene $value años")
}
fun elegirPais(country:String){
    when(country){
        "Mexico" ->{
            val idioma ="Español"
            val divisa ="Peso"
            actualizarPerfil(pais)
            println("Bienvenido")
        }
    }
    class Phone {
        //Una clase es un modelo abstracto de un objeto, y su representación más básica en kotlin es la siguiente:
    }
    val=20
    println("a es igual a 20? ${a.equals(20)}")
}

}